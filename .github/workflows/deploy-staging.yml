name: Deploy to Staging

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20'
  VERCEL_ENV: 'preview'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linting
        run: npm run lint:strict

      - name: Run tests
        run: npm run test:ci

      - name: Build application
        run: npm run build

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--target preview'
        continue-on-error: true

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Preview URL')
            );
            
            const previewUrl = `https://contabilease-git-${context.payload.pull_request.head.ref.toLowerCase().replace(/[^a-z0-9-]/g, '-')}-contabilease.vercel.app`;
            
            const body = `ðŸš€ **Preview URL**: ${previewUrl}\n\nThis preview will be updated automatically when you push new commits.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
